unit DynStructures;

interface

type
  // Тип односвязный список с натуральными числами
  TPList = ^TItem;

  TItem = record
    Elem: Cardinal;
    Next: TPList;
  end;

  // Тип стека с целыми числами
  TStack = TPList;

  { Процедура инициализации списка }
procedure InitializeList(var Head: TPList);

{ Процедура очищения списка }
procedure DestroyList(var Head: TPList);

{ Процедура вставки в стек }
procedure Push(var Head: TStack; n: Integer);

{ Функция извлечения из стека }
function Pop(var Head: TStack): Cardinal;

{ Функция проверки списка на пустоту }
function isEmpty(const Head: TPList): Boolean;

implementation

procedure Push;
var
  t: TStack; // Добавляемый элемент стека
begin

  // Инициализация нового элемента
  New(t);
  t.Elem := n;
  t.Next := nil;

  // Перемещение вершины стека
  if not isEmpty(Head) then
    t.Next := Head;
  Head := t;

end;

function Pop;
var
  t: TStack; // Извлекаемый из стека элемент
begin

  if not isEmpty(Head) then
  begin
    // Перемещение вершины стека
    t := Head;
    Head := Head.Next;

    // Извлечение элемента с очисткой указателя
    Result := t.Elem;
    Dispose(t);
  end
  else
    Result := 0;

end;

function isEmpty;
begin
  Result := Head = nil;
end;

procedure InitializeList;
begin
  Head := nil;
end;

procedure DestroyList;
var
  t: TPList;
begin
  // TODO 1: Добавить очистку списка
end;

end.
